#include <iostream>
using namespace std;

class Point{
public:         //class -멤버 변수들을 해당 클래스 외부에서도 참조 가능하도록
    Point() {}  //default 생성자 
    Point(int x, int y) {       // 생성자
        this->x = x;
        this->y = y;
    }
    int x;      //멤버 변수, 속성(property)
    int y;
    
};

class Rect{
public: 
    
    Rect(Point p1, Point p2) {      //Point의 기본 생성자가 없습니다 --> ???
        this->p1 = p1;
        this->p2 = p2;
    }
    
    Point p1;           //멤버변수
    Point p2;
    //int dx;
    //int dy;
    
    int area() {       //사각형의 넓이를 구하는 메소드, 멤버 함수(Member Function)
        int val = (p1.x - p2.x) * (p1.y - p2.y);
        return (val < 0) ? -val : val;
    }
    double dist(); //{         //두 점간 거리
    //    int x = p1.x - p2.x;
    //    int y = p1.y - p2.y;
    //    return sqrt(x * x + y * y);
    //}
};

class RectEx : Rect {   //위의Rect클래스를 상속함 의미
    //class Rect의 모든 내용 존재함
public:
    Point p3 = {p1.x, p2.y};    
    Point p4 = { p2.x, p1.y };

    int tot_len() {
        int x = p1.x - p2.x;
        int y = p1.y - p2.y;
        if (x < 0) x = -x;
        if (y < 0) y = -y;
        return 2 * (x + y);
    }
};

double Rect::dist() {       //클래스 외부에서 정의
    int x = p1.x - p2.x;
    int y = p1.y - p2.y;
    return sqrt(x * x + y * y);
}
int main()
{
    /*
    cout<< "Hello World!\n";
    //Rect r1;
    //cout << r1.p1.x;        //초기화되지 않아 오류 발생
    //cout << r1.area();      //초기화x지만 0출력됨

    Rect r1 = { {10,20},{20,10} };      //struct --> class로 만들면 오류 발생
    cout << "r1의 넓이는 " << r1.area() << " 거리는 " << r1.dist() << endl;

    Point p1(10, 10);
    Point p2(20, 20);
    Rect r2 = {p1,p2};
    */

    Point p1= Point(10, 10);
    Point p2(20, 20);
    Rect r1(p1, p2);

    //Rect r1 = { {10,10}, {20,20} };
    cout << r1.dist() << endl;

    //RectEx r2 = { {10,10}, {20,20} };
}
